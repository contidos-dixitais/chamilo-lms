<?php
/* For licensing terms, see /license.txt */

namespace Chamilo\PluginBundle\Smowl\Form;

use Category;
use Chamilo\PluginBundle\Entity\Smowl\SmowlTool;
use Display;
use FormValidator;
use Smowl;
use SmowlPlugin;
use SmowlAssignmentGradesService;
use SmowlNamesRoleProvisioningService;

/**
 * Class FrmAdd.
 */
class FrmAdd extends FormValidator
{
    /**
     * @var SmowlTool|null
     */
    private $baseTool;
    /**
     * @var bool
     */
    private $toolIsV1p3;

    /**
     * FrmAdd constructor.
     *
     * @param string          $name
     * @param array           $attributes
     * @param SmowlTool|null $tool
     */
    public function __construct(
        $name,
        $attributes = [],
        SmowlTool $tool = null
    ) {
        parent::__construct($name, 'POST', '', '', $attributes, self::LAYOUT_HORIZONTAL, true);

        $this->baseTool = $tool;
        $this->toolIsV1p3 = $this->baseTool;
    }

    /**
     * Build the form
     */
    public function build()
    {
        $plugin = SmowlPlugin::create();

        $this->addHeader($plugin->get_lang('ToolSettings'));
        $this->addText('name', get_lang('Name'));
        $this->addTextarea('description', get_lang('Description'));

        if (null === $this->baseTool) {
            $this->addUrl('launch_url', $plugin->get_lang('LaunchUrl'), true);
        }

        $this->addButtonCreate($plugin->get_lang('AddExternalTool'));
        $this->applyFilter('__ALL__', 'trim');
    }

    public function setDefaultValues()
    {
        $defaults = [];

        if ($this->baseTool) {
            $defaults['name'] = $this->baseTool->getName();
            $defaults['description'] = $this->baseTool->getDescription();
        }

        $this->setDefaults($defaults);
    }

    public function returnForm(): string
    {
        $js = "";

        return $js.parent::returnForm(); // TODO: Change the autogenerated stub
    }
}
